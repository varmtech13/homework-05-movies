{"version":3,"file":"static/js/730.7f93cf8e.chunk.js","mappings":"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","sources":["Hooks/useLoader.js","Hooks/usePages.js","Pages/HomeView/HomeView.styled.js","Pages/HomeView/HomeView.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","services/makeImagePath.js","services/tmdb-api.js"],"sourcesContent":["import { useState } from 'react';\n\nexport default function useLoader() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  return { isLoading, setIsLoading };\n}\n","import { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nexport default function usePages() {\n  const [totalPage, setTotalPage] = useState(1);\n  const history = useNavigate();\n  const location = useLocation();\n\n  const page = Number(new URLSearchParams(location.search).get('page') ?? 1);\n\n  function handleChangePage(pageNumber) {\n    history({ ...location, search: `page=${pageNumber}` });\n  }\n\n  return { page, totalPage, setTotalPage, handleChangePage };\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 40px 0;\n  text-transform: uppercase;\n`;\nexport const Wrapper = styled.div``;\n","import { useState, useEffect } from 'react';\nimport { fetchTrandingMovie } from '../../services/tmdb-api';\nimport MovieList from '../../components/MovieList/MovieList';\nimport usePages from '../../Hooks/usePages';\nimport useLoader from '../../Hooks/useLoader';\nimport { Title, Wrapper } from './HomeView.styled';\n\nexport default function HomeView() {\n  const [trandingMovie, setTrandingMovie] = useState([]);\n\n  const { page, totalPage, setTotalPage, handleChangePage } = usePages();\n  const { isLoading, setIsLoading } = useLoader();\n\n  useEffect(() => {\n    setIsLoading(isLoading => !isLoading);\n\n    fetchTrandingMovie(page)\n      .then(([result, total]) => {\n        setTrandingMovie(result);\n        setTotalPage(total);\n      })\n      .finally(() => setIsLoading(isLoading => !isLoading));\n  }, [page, setIsLoading, setTotalPage]);\n\n  return (\n    <Wrapper>\n      <Title>Tranding Movies</Title>\n\n      {trandingMovie && (\n        <MovieList\n          movies={trandingMovie}\n          total={totalPage}\n          onChangePage={handleChangePage}\n          loading={isLoading}\n          currentPage={page}\n        />\n      )}\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  width: 20%;\n  margin-bottom: 25px;\n`;\nexport const ResponsiveImage = styled.img`\n  max-width: 100%;\n`;\n\nexport const PaginationStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  border-radius: 5px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport PropTypes from 'prop-types';\nimport {\n  List,\n  Item,\n  ResponsiveImage,\n  PaginationStyle,\n} from './MovieList.styled.js';\nimport { makeImagePath } from '../../services/makeImagePath';\nimport { TailSpin } from 'react-loader-spinner';\n\nexport default function MovieList({\n  movies,\n  total,\n  onChangePage,\n  loading,\n  currentPage,\n}) {\n  const location = useLocation();\n  return (\n    <>\n      {loading ? (\n        <TailSpin color=\"#ff0000\" size=\"23\" type=\"Rings\" />\n      ) : (\n        <List>\n          {movies.map(movie => {\n            const posterPath = makeImagePath(movie.poster_path, 'w185');\n            return (\n              <Item key={movie.id}>\n                <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                  <ResponsiveImage\n                    src={posterPath}\n                    alt={movie.title}\n                    width=\"245\"\n                  />\n                </NavLink>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n\n      {total > 1 && !loading && (\n        <PaginationStyle>\n          <Pagination\n            count={total}\n            variant=\"outlined\"\n            shape=\"rounded\"\n            color=\"secondary\"\n            onChange={(event, pages) => {\n              onChangePage(pages);\n            }}\n            page={currentPage}\n          />\n        </PaginationStyle>\n      )}\n    </>\n  );\n}\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n","import noImage from '../images/no-image.jpg';\n\nexport function makeImagePath(path, size = 'w342') {\n  if (!path) return noImage;\n  return `https://image.tmdb.org/t/p/${size}/${path}`;\n}\n\nexport function makeAvavtarPath(path) {\n  if (!path) return noImage;\n  return `${path.slice(1)}`;\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f60618f0219d3f0209af6a5269269e97';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = { api_key: API_KEY, language: 'en-EN' };\n\nexport async function fetchTrandingMovie(page = 1) {\n  try {\n    const {\n      data: { total_pages, results },\n    } = await axios.get(`/trending/movie/day?page=${page}`);\n    return [results, total_pages];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovie(query, page = 1) {\n  try {\n    const {\n      data: { total_pages, results },\n    } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n    return [results, total_pages];\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const {\n      data: { cast },\n    } = await axios.get(`/movie/${movieId}/credits`);\n    return cast;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const {\n      data: { results },\n    } = await axios.get(`/movie/${movieId}/reviews`);\n\n    return results;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n"],"names":["useLoader","useState","isLoading","setIsLoading","usePages","totalPage","setTotalPage","history","useNavigate","location","useLocation","page","Number","URLSearchParams","search","get","handleChangePage","pageNumber","Title","styled","Wrapper","HomeView","trandingMovie","setTrandingMovie","useEffect","fetchTrandingMovie","then","result","total","finally","MovieList","movies","onChangePage","loading","currentPage","List","Item","ResponsiveImage","PaginationStyle","color","size","type","map","movie","posterPath","makeImagePath","poster_path","to","id","state","from","src","alt","title","width","Pagination","count","variant","shape","onChange","event","pages","path","noImage","makeAvavtarPath","slice","axios","data","total_pages","results","console","log","fetchMovie","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","api_key","language"],"sourceRoot":""}